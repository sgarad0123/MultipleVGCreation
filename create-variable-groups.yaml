trigger: none

pool:
  name: AKS
  vmImage: 'ubuntu-latest'

variables:
  - group: vg-create-vg-source
  - group: devops-secrets-vg

parameters:
  - name: environments
    type: object
    default: ['DEV', 'SIT', 'UAT', 'PT', 'PROD', 'DR']

steps:
  - task: Bash@3
    displayName: 🔧 Set permissions for scripts
    inputs:
      targetType: 'inline'
      script: |
        chmod +x ./generate-export-vars.sh
        chmod +x ./create-multi-env-vgs.sh

  - task: Bash@3
    displayName: 🔧 Generate export-vars.sh
    inputs:
      targetType: 'filePath'
      filePath: ./generate-export-vars.sh

  - task: Bash@3
    displayName: 🚀 Create Environment Variable Groups (Track 1)
    inputs:
      targetType: 'inline'
      script: |
        source ./export-vars.sh

        echo "🔁 Environments to process: $ENV_LIST"

        trackname="$track1_name"
        tracktype="$track1_type"
        appid="$track1_appid"
        apptype="$track1_apptype"

        if [[ -z "$trackname" || -z "$tracktype" || -z "$appid" || -z "$apptype" ]]; then
          echo "❌ ERROR: Missing input for track1"
          exit 1
        fi

        echo "🧩 Track 1: name=$trackname, type=$tracktype, appid=$appid, apptype=$apptype"

        environments="${{ join(',', parameters.environments) }}"
        IFS=',' read -ra ENV_LIST <<< "$environments"

        for env in "${ENV_LIST[@]}"; do
          echo "➡️ Creating variable group for $env - $appid - $trackname"
          ./create-multi-env-vgs.sh "$env" "$appid" "$trackname" "$tracktype" "$apptype"
        done
