trigger: none

pool:
  name: AKS
  vmImage: 'ubuntu-latest'

variables:
  # These variable groups are assumed to contain:
  # vg-create-vg-source: ORG, PROJECT, track1_name, track1_type, track1_appid, track1_apptype
  # devops-secrets-vg: AZURE_DEVOPS_PAT (marked as secret)
  - group: vg-create-vg-source
  - group: devops-secrets-vg

parameters:
  - name: environments
    type: object
    default: ['DEV', 'SIT', 'UAT', 'PT', 'PROD', 'DR']

steps:
  - task: Bash@3
    displayName: "‚öôÔ∏è Install jq and set permissions"
    inputs:
      targetType: 'inline'
      script: |
        echo "Installing jq for JSON processing..."
        sudo apt-get update && sudo apt-get install -y jq
        echo "jq installed."
        
        echo "Making create-multi-env-vgs.sh executable..."
        chmod +x ./create-multi-env-vgs.sh
        echo "Permissions set."

  - task: Bash@3
    displayName: "üöÄ Create Variable Groups"
    inputs:
      targetType: 'inline'
      # CORRECTED INDENTATION: 'env' should be at the same level as 'targetType' and 'script'
      env:
        ORG: $(ORG)
        PROJECT: $(PROJECT)
        AZURE_DEVOPS_PAT: $(AZURE_DEVOPS_PAT) # This is a secret variable
        # Pass track1 variables directly
        TRACK1_NAME: $(track1_name)
        TRACK1_TYPE: $(track1_type)
        TRACK1_APPID: $(track1_appid)
        TRACK1_APPTYPE: $(track1_apptype)
      script: |
        echo "Starting Variable Group Creation process..."

        # Access environment variables directly, no need for export-vars.sh
        ORG="${ORG}"
        PROJECT="${PROJECT}"
        AZURE_DEVOPS_PAT="${AZURE_DEVOPS_PAT}"

        trackname="${TRACK1_NAME}"
        tracktype="${TRACK1_TYPE}"
        appid="${TRACK1_APPID}"
        apptype="${TRACK1_APPTYPE}"

        if [[ -z "$trackname" || -z "$tracktype" || -z "$appid" || -z "$apptype" ]]; then
          echo "‚ùå ERROR: Missing track1 input from variable group."
          echo "Please ensure 'track1_name', 'track1_type', 'track1_appid', 'track1_apptype' are set in 'vg-create-vg-source'."
          exit 1
        fi

        echo "üß© Track 1 details: name=$trackname, type=$tracktype, appid=$appid, apptype=$apptype"
        echo "Azure DevOps Org: $ORG, Project: $PROJECT"

        # Convert the environments parameter array into a space-separated string for Bash
        # This resolves the "Unable to convert from Array to String" error
        environments_str="${{ join(' ', parameters.environments) }}"
        IFS=' ' read -r -a environments_array <<< "$environments_str"

        echo "üîÅ Environments to process: ${environments_array[@]}"

        for env in "${environments_array[@]}"; do
          echo "‚û°Ô∏è Attempting to create variable group for environment: $env"
          # Pass ORG, PROJECT, and PAT directly as arguments to the script
          ./create-multi-env-vgs.sh "$env" "$appid" "$trackname" "$tracktype" "$apptype" "$ORG" "$PROJECT" "$AZURE_DEVOPS_PAT"
        done

        echo "Variable Group Creation process completed."
