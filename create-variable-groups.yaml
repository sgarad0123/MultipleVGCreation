trigger: none

parameters:
  - name: environments
    type: object
    default: ['DEV', 'SIT', 'UAT', 'PT', 'PROD', 'DR']

pool:
  name: AKS
  vmImage: 'ubuntu-latest'

variables:
  - group: vg-create-vg-source
  - group: devops-secrets-vg

steps:
  - script: |
      echo "TRACKCOUNT: $(TRACKCOUNT)"
      echo "track1_name: $(track1_name)"
      echo "track1_type: $(track1_type)"
      echo "track1_appid: $(track1_appid)"
      echo "track1_apptype: $(track1_apptype)"
    displayName: 'üîç Debug Track 1 Inputs'

  - script: |
      chmod +x ./generate-export-vars.sh
      ./generate-export-vars.sh
    displayName: 'üîß Generate export-vars.sh'

  - script: |
      source ./export-vars.sh
      chmod +x ./create-multi-env-vgs.sh

      echo "üîÅ Environments to process: ${{ join(',', parameters.environments) }}"
      IFS=',' read -ra ENV_LIST <<< "${{ join(',', parameters.environments) }}"

      for ((i=1; i<=${TRACKCOUNT}; i++)); do
        name_var="track${i}_name"
        type_var="track${i}_type"
        appid_var="track${i}_appid"
        apptype_var="track${i}_apptype"

        TRACKNAME="${!name_var}"
        TRACKTYPE="${!type_var}"
        APPID="${!appid_var}"
        APPTYPE="${!apptype_var}"

        if [[ -z "$TRACKNAME" || -z "$TRACKTYPE" || -z "$APPID" || -z "$APPTYPE" ]]; then
          echo "‚ùå ERROR: Missing variables for track$i"
          exit 1
        fi

        echo "üß© Track $i: name=$TRACKNAME, type=$TRACKTYPE, appid=$APPID, apptype=$APPTYPE"

        for ENV in "${ENV_LIST[@]}"; do
          echo "‚û°Ô∏è Creating variable group for $ENV - $APPID - $TRACKNAME"
          ./create-multi-env-vgs.sh "$ENV" "$APPID" "$TRACKNAME" "$TRACKTYPE" "$APPTYPE"
        done
      done
    displayName: 'üöÄ Create Variable Groups for All Envs'
